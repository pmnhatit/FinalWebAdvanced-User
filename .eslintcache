[{"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\index.js":"1","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\reportWebVitals.js":"2","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Main\\main.js":"3","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\App.js":"4","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Bar\\bar.js":"5","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\ScreenGame\\screengame.js":"6","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\MatchHistory\\matchHistory.js":"7","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Signup\\signup.js":"8","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Signin\\signin.js":"9","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\onlineUser.js":"10","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage_game.js":"11","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage.js":"12","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Room\\settingroom.js":"13","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Constant\\context.js":"14","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\socket.io.js":"15","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Game.js":"16","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Chat\\chat.js":"17","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Board.js":"18","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\services.js":"19","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Constant\\configs.js":"20","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\TextContainer\\TextContainer.js":"21","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\InfoBar\\infoBar.js":"22","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Input\\input.js":"23","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\messages.js":"24","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Square.js":"25","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\Message\\message.js":"26","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\TableOnline\\TableOnline.js":"27"},{"size":537,"mtime":1607436553467,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1607254998336,"results":"30","hashOfConfig":"29"},{"size":1822,"mtime":1609175006105,"results":"31","hashOfConfig":"29"},{"size":553,"mtime":1607254998313,"results":"32","hashOfConfig":"29"},{"size":3332,"mtime":1608125664169,"results":"33","hashOfConfig":"29"},{"size":282,"mtime":1608116654624,"results":"34","hashOfConfig":"29"},{"size":4060,"mtime":1608125664170,"results":"35","hashOfConfig":"29"},{"size":5714,"mtime":1608116654625,"results":"36","hashOfConfig":"29"},{"size":7141,"mtime":1609084406293,"results":"37","hashOfConfig":"29"},{"size":4256,"mtime":1609084406294,"results":"38","hashOfConfig":"29"},{"size":4159,"mtime":1609084406292,"results":"39","hashOfConfig":"29"},{"size":2124,"mtime":1609174981269,"results":"40","hashOfConfig":"29"},{"size":5969,"mtime":1609084406293,"results":"41","hashOfConfig":"29"},{"size":73,"mtime":1609084406291,"results":"42","hashOfConfig":"29"},{"size":203,"mtime":1609084406295,"results":"43","hashOfConfig":"29"},{"size":11690,"mtime":1609084406291,"results":"44","hashOfConfig":"29"},{"size":2056,"mtime":1609084406290,"results":"45","hashOfConfig":"29"},{"size":869,"mtime":1608116654622,"results":"46","hashOfConfig":"29"},{"size":5520,"mtime":1608116654623,"results":"47","hashOfConfig":"29"},{"size":354,"mtime":1608116654622,"results":"48","hashOfConfig":"29"},{"size":912,"mtime":1608116654621,"results":"49","hashOfConfig":"29"},{"size":509,"mtime":1608116654619,"results":"50","hashOfConfig":"29"},{"size":580,"mtime":1608116654620,"results":"51","hashOfConfig":"29"},{"size":378,"mtime":1609084406291,"results":"52","hashOfConfig":"29"},{"size":316,"mtime":1608116654623,"results":"53","hashOfConfig":"29"},{"size":982,"mtime":1608116654620,"results":"54","hashOfConfig":"29"},{"size":3574,"mtime":1609174980153,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1mrluyp",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\index.js",[],["124","125"],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\reportWebVitals.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Main\\main.js",["126","127","128"],"import React ,{ useState, useEffect ,useContext} from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport MenuAppBar from '../Bar/bar';\r\nimport SignIn from '../Signin/signin';\r\nimport SignUp from \"../Signup/signup\"\r\nimport App from \"../../App\"\r\nimport OnlineUser from '../onlineUser'\r\nimport Homepage from '../Homepage/homepage'\r\nimport Game from '../Homepage/homepage_game'\r\nimport MatchHistory from '../MatchHistory/matchHistory'\r\nimport TableOnline from '../TableOnline/tableonline'\r\nimport SettingRoom from '../Room/settingroom'\r\nimport ScreenGame from '../ScreenGame/screengame'\r\nimport { Context } from \"../Constant/context\";\r\nexport default function Main()\r\n{   \r\n    const [context, setContext] = useState(\"default context value\");\r\n     localStorage.setItem('backend',`https://apiuser-caro.herokuapp.com/`);\r\n    // localStorage.setItem('backend',`http://localhost:5000/`);\r\n    return(\r\n        <BrowserRouter>\r\n        <MenuAppBar/>\r\n        <div className=\"main-route-place\">\r\n            <Switch>\r\n            <Context.Provider value={[context, setContext]}>\r\n            <Route  path='/signup' component={SignUp}/>\r\n            <Route  path='/online' component={OnlineUser}/>\r\n            <Route exact path='/' component={SignIn}/>\r\n            <Route path='/app' component={App}/>\r\n            <Route path='/homepage' component={Game}/>\r\n            <Route path='/history' component={MatchHistory}/>\r\n            <Route path='/tableonline' component={TableOnline}/>\r\n            <Route path='/settingroom' component={SettingRoom}/>\r\n            <Route path='/screengame' component={ScreenGame}/>\r\n            {/* <Route path='/game' component={Game}/> */}\r\n            </Context.Provider>\r\n            </Switch>\r\n        </div>\r\n        \r\n        </BrowserRouter>\r\n    );\r\n}\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\App.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Bar\\bar.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\ScreenGame\\screengame.js",["129"],"import React, { useState } from 'react';\r\nimport Game from '../Game/Game'\r\nimport {Chat} from '../Chatroom/Chat/chat'\r\nexport default function ScreenGame(props) {\r\n    return(<div>\r\n        <Game roomInfo={props.roomInfo}/>\r\n        <Chat roomInfo={props.roomInfo}/>\r\n    </div>)\r\n}","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\MatchHistory\\matchHistory.js",["130","131","132","133","134","135","136"],"import React, { useState } from 'react';\r\nimport  { useEffect } from \"react\";\r\n// import clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\n\r\nexport default function MatchHistory() {\r\n  const classes = useStyles();\r\n  // const [orders] = useState(data);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token=JSON.parse(localStorage.getItem('token'));\r\n  const url = localStorage.getItem(\"backend\");\r\n  const [success, setSuccess] = useState(true);\r\n  const [data, setData]=useState([{_id: \"5fd98a90fea29a4868ed1953\", player_id: \"null\", enemy: \"a\", date: \"dd/mm/yyyy\", status: \"null\"}]);\r\n  \r\n//   console.log(user);\r\n//   console.log(token);\r\n\r\n  useEffect(() => {\r\n\r\n  \r\n  const res =  fetch(url+`profile/history/${user._id}`, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    headers: {\r\n       Authorization:'Bearer '+ `${token}`,\r\n       'Content-Type': 'application/json',\r\n  },\r\n    // body: JSON.stringify(body),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      console.log(result);\r\n      setData(result);\r\n      //console.log(data);\r\n    })\r\n    .catch((err) => {\r\n      setSuccess(false);\r\n      console.log(\"fail load history\");\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <Card\r\n      // className={clsx(classes.root, className)}\r\n      // {...rest}\r\n    >\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Số thứ tự\r\n                </TableCell>\r\n                <TableCell>\r\n                 Đối thủ\r\n                </TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Ngày\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                key={order._id}\r\n                >\r\n                  <TableCell>\r\n                    {order.order}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {order.enemy}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {moment(order.createdAt).format('DD/MM/YYYY')} */}\r\n                    {order.date}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color=\"primary\"\r\n                      label={order.status}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// LatestOrders.propTypes = {\r\n//   className: PropTypes.string\r\n// };\r\n\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Signup\\signup.js",["137"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const url= localStorage.getItem('backend');\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  \r\n\r\n  const addUser = async () => {\r\n    console.log(\"add\");\r\n    sendaddUser();\r\n    history.push(\"/\");\r\n  };\r\n  const sendaddUser = async () => {\r\n    const body = {\r\n      username: userName,\r\n      password: password,\r\n      name: name,\r\n      phone:phone,\r\n      email:email\r\n    };\r\n    console.log(body);\r\n    console.log(1);\r\n    const res = await fetch(url + `users/signup`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"userName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                label=\"UserName\"\r\n                autoFocus\r\n                onChange={(e)=>setUserName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                name=\"Name\"\r\n                autoComplete=\"name\"\r\n                onChange={(e)=>setName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Phone\"\r\n                label=\"Phone\"\r\n                name=\"Phone\"\r\n                autoComplete=\"Phone\"\r\n                onChange={(e)=>setPhone(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n           \r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={addUser}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Signin\\signin.js",["138","139","140"],"import React, { useState,useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport socket from '../socket.io'\r\nimport { Context } from \"../Constant/context\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n// const saveLocalStorage = (result) => {\r\n  \r\n//   localStorage.setItem(\"token\", JSON.stringify(result.token));\r\n//   localStorage.setItem(\"id\", JSON.stringify(result.user._id));\r\n//   localStorage.setItem(\"username\", JSON.stringify(result.user.username));\r\n//   localStorage.setItem(\"name\", JSON.stringify(result.user.name));\r\n//   localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n\r\n//   // console.log(JSON.parse(localStorage.getItem('user')));\r\n// };\r\n\r\n\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [context, setContext] = useContext(Context);\r\n  const url = localStorage.getItem(\"backend\");\r\n  const [success, setSuccess] = useState(true);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let once_time=0;\r\n  socket.emit('disconnect');\r\n  const createFetch = async (linkUrl, body)=>\r\n{\r\n  const res = await fetch(linkUrl, {\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      //console.log(result);\r\n      saveLocalStorage(result);\r\n      console.log(result.user.name);\r\n      if(once_time===0){\r\n        socket.emit(\"onlineUser\",result.user.name);\r\n        once_time++;\r\n      }\r\n    \r\n      history.push('/homepage');\r\n    \r\n    })\r\n    .catch((err) => {\r\n      setSuccess(false);\r\n      console.log(\"error aa\");\r\n    });\r\n}\r\n\r\n  const handlerLogin = async (e) => {\r\n    console.log(\"handlerLogin\");\r\n    const body = {\r\n      username: userName,\r\n      password: password,\r\n    };\r\n    createFetch(url + \"users/signin\",body);\r\n  };\r\n\r\n  const responseGoogle = async(response) => {\r\n    //console.log(response.tokenId);\r\n    const body = {\r\n      token: response.tokenId\r\n    };\r\n    createFetch(url + \"users/signin/google\",body);\r\n  \r\n  };\r\n  const responseFacebook = (response) => {\r\n    console.log(response.accessToken);\r\n    const body = {\r\n      \r\n      accessToken:response.accessToken,\r\n      userID :response.userID\r\n    };\r\n    \r\n    createFetch(url + \"users/signin/facebook\",body);\r\n  }\r\n  const saveLocalStorage = (result) => {\r\n  \r\n    localStorage.setItem(\"token\", JSON.stringify(result.token));\r\n    localStorage.setItem(\"id\", JSON.stringify(result.user._id));\r\n    localStorage.setItem(\"username\", JSON.stringify(result.user.username));\r\n    localStorage.setItem(\"name\", JSON.stringify(result.user.name));\r\n    localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n    setContext({id:result.user._id,username:result.user.username,name:result.user.name,user:result.user})\r\n    // console.log(JSON.parse(localStorage.getItem('user')));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"UserName\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handlerLogin}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <GoogleLogin\r\n          clientId=\"718820147204-d08vqnq79hnapbjv3099umi363a7bf5k.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n        />\r\n        <FacebookLogin\r\n          appId=\"1156392861430294\"\r\n          //autoLoad={true}\r\n          fields=\"name,email,picture\"\r\n          //onClick={componentClicked}\r\n          callback={responseFacebook} />,\r\n          {/* <FacebookLogin\r\n    appId=\"1156392861430294\"\r\n    autoLoad={true}\r\n    fields=\"name,email,picture\"\r\n    callback={responseFacebook}\r\n    cssClass=\"my-facebook-button-class\"\r\n    icon=\"fa-facebook\"\r\n  />, */}\r\n          \r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n\r\n}\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\onlineUser.js",["141","142","143","144","145"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'; \r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport socket from './socket.io'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        // maxWidth: 752,\r\n        justifyContent: 'space-between',\r\n        // margin: 5,\r\n        marginRight: 50,\r\n        marginLeft:50\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2, 0, 2),\r\n    },\r\n    itemright: {\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n\r\n    },\r\n    rowIcon:{\r\n\r\n    }\r\n\r\n}));\r\n\r\nexport default function OnlineUser() {\r\n  const classes = useStyles();\r\n  const [response, setResponse] = useState('');\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n  \r\n    socket.emit(\"onlineUser\");\r\n    useEffect(() => {\r\n      // const socket = socketIOClient(ENDPOINT);\r\n      socket.on('FromAPI', (data) => {\r\n        setResponse(data);\r\n      });\r\n      socket.on('onlineUserServer', (arrayNameOnline) => {\r\n          console.log(\"online \", arrayNameOnline);\r\n       let temp=[];\r\n        arrayNameOnline.forEach(element => {\r\n  \r\n          temp.push(element.name);\r\n  \r\n        });\r\n  \r\n        setOnlineUsers(temp);\r\n  \r\n        // const users = JSON.parse(message);\r\n        // setOnlineUsers(users);\r\n        // console.log(onlineUsers);\r\n      });\r\n      return () => socket.disconnect();\r\n    }, []);\r\n    const onlineUsersList = onlineUsers.map((onlineUser) => (\r\n      <li>{onlineUser}</li>\r\n    ));\r\n  \r\n    return (\r\n        \r\n        <div className={classes.root}>\r\n            <Grid container spacing={2} className={classes.root}>\r\n                <Grid item xs={12} >\r\n                    <div className={classes.itemright}>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Người chơi online\r\n                    </Typography>\r\n                    </div>\r\n                    <div>\r\n                    {onlineUsers.map((item) => (\r\n                         <div className={classes.itemright}>\r\n                      <ListItemText\r\n                      primary={item} />\r\n                      <IconButton >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n              \r\n                    <IconButton >\r\n                      <SendIcon />\r\n                    </IconButton>\r\n                    </div>\r\n                    ))}\r\n                    </div>\r\n                </Grid>\r\n             \r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n// If first time enter, this make sure not call a loop request\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import socket from './socket.io';\r\n\r\n\r\n\r\n// function App() {\r\n//   const [response, setResponse] = useState('');\r\n//   const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // const socket = socketIOClient(ENDPOINT);\r\n//     socket.on('FromAPI', (data) => {\r\n//       setResponse(data);\r\n//     });\r\n//     socket.on('onlineUserServer', (arrayNameOnline) => {\r\n//         console.log(\"online \", arrayNameOnline);\r\n//      let temp=[];\r\n//       arrayNameOnline.forEach(element => {\r\n\r\n//         temp.push(element.name);\r\n\r\n//       });\r\n\r\n//       setOnlineUsers(temp);\r\n\r\n//       // const users = JSON.parse(message);\r\n//       // setOnlineUsers(users);\r\n//       // console.log(onlineUsers);\r\n//     });\r\n//     return () => socket.disconnect();\r\n//   }, []);\r\n//   const onlineUsersList = onlineUsers.map((onlineUser) => (\r\n//     <li>{onlineUser}</li>\r\n//   ));\r\n\r\n//   return (\r\n//     <div>\r\n//       Danh sách người online\r\n//       <ul>{onlineUsersList}</ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage_game.js",["146","147","148","149"],"import React, { useState,useContext } from 'react';\r\nimport {Button,TextField} from \"@material-ui/core\";\r\nimport ScreenGame from '../ScreenGame/screengame'\r\nimport {Chat} from '../Chatroom/Chat/chat'\r\nimport socket from '../socket.io'\r\nimport {Link} from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Context } from \"../Constant/context\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(5),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    margin_top: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n}));\r\nfunction Homepage() {\r\n    const classes = useStyles();\r\n    const [rival,setRival]=useState(\"Chơi nhanh\");\r\n    const [friend,setFriend]=useState(\"vao phong\");\r\n    const [roomInfo, setRoomInfo] = useState(null);\r\n    const [idRoom,setIDRoom]=useState(0);\r\n    const [pass,setPass]=useState('0');\r\n    const [disabled,setDisabled]=useState(false);\r\n    const [context, setContext] = useContext(Context);\r\n\r\n    socket.removeAllListeners();\r\n    socket.on('joinroom-success', function (roomInfo) {\r\n        socket.joinroom = true;\r\n        console.log(roomInfo);\r\n        setRoomInfo(roomInfo);\r\n    });\r\n    socket.on('no-room',(data)=>{\r\n        alert(\"Không tìm thấy phòng\");\r\n    })\r\n    // socket.on('joinroom-success-ai', function (roomInfo) {\r\n    //     socket.joinroom = true;\r\n    //     actions.actionJoinRoom(roomInfo);\r\n    //     actions.actionResetGame(Config.oPlayer);\r\n    // });\r\n\r\n    // If found a rival, start game\r\n    if (roomInfo) {\r\n         return <ScreenGame roomInfo={roomInfo} />\r\n        //  return <Chat  />\r\n       \r\n    }\r\n    // Choose to play with AI or other user\r\n    else {\r\n        return (\r\n           \r\n               \r\n                <div className={classes.paper} >\r\n                    <Button variant=\"contained\" onClick={(e)=>findRival(e)} disabled={disabled}>{rival}</Button>\r\n                    <Link to={`/settingroom`}>\r\n                        <div className={classes.margin_top}>\r\n                    <Button >\r\n                        Tạo phòng\r\n                    </Button>\r\n                    </div>\r\n                    </Link>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Tên phòng\"\r\n                        type=\"email\"\r\n                        onChange={handleChange} \r\n\r\n                    />\r\n                    <TextField\r\n\r\n                        margin=\"dense\"\r\n                        id=\"pass\"\r\n                        label=\"Mật khẩu (nếu có)\"\r\n                        type=\"email\"\r\n                        onChange={handleChange} \r\n\r\n                    />\r\n                     <Button onClick={handleSubmit}>\r\n                        Tham gia phòng\r\n                    </Button>\r\n                   \r\n                   \r\n                </div>\r\n          \r\n        );\r\n    }\r\n    function findRival(e) {\r\n        setRival(\".... Đang tìm đối thủ ....\")\r\n        setDisabled(true);\r\n        const data={\r\n            name: context.name,\r\n            id: context.id,\r\n            pass: '0',\r\n            time: 10\r\n        }\r\n        socket.emit('joinroom_quick', data);\r\n        socket.emit('tableonline');\r\n    }\r\n    function handleChange(event) {\r\n        if(event.target.id==='name')\r\n        setIDRoom(event.target.value);\r\n        else{\r\n            setPass(event.target.value);\r\n        }\r\n    }\r\n    function handleSubmit(e){\r\n        console.log(\"name \",idRoom);\r\n        console.log(\"pass \",pass);\r\n        const data={\r\n            name: context.name,\r\n            id: idRoom,\r\n            pass: pass,\r\n            time: 10\r\n        }\r\n        console.log(data);\r\n        socket.emit('joinroom', data);\r\n        socket.emit('tableonline');\r\n    }\r\n}\r\n\r\n// If first time enter, this make sure not call a loop request\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Homepage;\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage.js",["150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport OnlineUser from '../onlineUser' ;\r\nimport Homepage_game from './homepage_game'\r\nimport TableOnline from '../TableOnline/tableonline'\r\nimport {Button,colors,TextField} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useParams} from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        // maxWidth: 752,\r\n        justifyContent: 'space-between',\r\n        margin: 5,\r\n        marginRight: 30\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    itemright:{\r\n       display:\"flex\",\r\n       flexDirection:'row',\r\n       justifyContent:'space-between'\r\n       \r\n    },\r\n    \r\n}));\r\n\r\nexport default function InteractiveList(props) {\r\n    const classes = useStyles();\r\n    const [addwell,setWell]=useState(false);\r\n    const [addimprove,setImprove]=useState(false);\r\n    const [addaction,setAction]=useState(false);\r\n    let { id } = useParams(); \r\n    const history = useHistory();\r\n    const handeClick=()=>{\r\n        history.push('/game');\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2} className={classes.root}>\r\n                <Grid item xs={4} >\r\n                    <div>\r\n                        <OnlineUser/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n               \r\n                    <div >\r\n                        <TableOnline/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} >\r\n                    <div className={classes.title} >\r\n                    <Button onClick={handeClick}>\r\n                        Chơi game\r\n                    </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Room\\settingroom.js",["163","164"],"import React, { useState,useContext } from 'react';\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport socket from '../socket.io';\r\nimport ScreenGame from '../ScreenGame/screengame'\r\nimport { Context } from \"../Constant/context\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(5),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n}));\r\n\r\nfunction SettingRoom() {\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState('0');\r\n    const [name, setName] = useState('');\r\n    const [time, setTime] = React.useState(5);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [createroom,setCreateRoom]=useState(\"Tạo phòng\");\r\n    const [disabled,setDisabled]=useState(false);\r\n    const [roomInfo, setRoomInfo] = useState(null);\r\n    const [context, setContext] = useContext(Context);\r\n    let temp='0';\r\n\r\n    socket.removeAllListeners();\r\n    socket.on('joinroom-success', function (roomInfo) {\r\n        socket.joinroom = true;\r\n        // console.log(roomInfo);\r\n        setRoomInfo(roomInfo);\r\n    });\r\n    socket.on('exist_room',(data)=>{\r\n        alert('Tên này đã có! vui lòng nhập tên khác!');\r\n        setCreateRoom(\"Tạo phòng\");\r\n        setDisabled(false);\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const handleChange_pass = (event) => {\r\n        temp=event.target.value;\r\n    };\r\n    const handleChange_name = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const handleChange_time = (event) => {\r\n        setTime(event.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const Textpass = () => {\r\n        return (\r\n           \r\n            <TextField id=\"password\" label=\"Mật khẩu\" onChange={handleChange_pass} />\r\n        )\r\n    }\r\n    const form_pass = (value === '0') ? <></> : <Textpass />\r\n  \r\n\r\n    const handleSubmit = () => {\r\n        // setPassword=temp;\r\n        setCreateRoom(\"...Đang chờ bạn của bạn vào phòng ...\");\r\n        setDisabled(true);\r\n        const pass_room = temp;\r\n        console.log(\"value \",value);\r\n        console.log(\"pass_room \", pass_room);\r\n        const room = {\r\n            name: context.name,\r\n            id: name,\r\n            pass: pass_room,\r\n            time: time\r\n        }\r\n      \r\n        socket.emit('createroom', room);\r\n        socket.emit('tableonline');\r\n    }\r\n    if (roomInfo) {\r\n        return <ScreenGame roomInfo={roomInfo} />\r\n       //  return <Chat  />\r\n      \r\n   }\r\n   else{\r\n\r\n  \r\n    return (\r\n        <center>\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Tạo phòng chơi mới\r\n            </Typography>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Tên phòng\"\r\n                    type=\"email\"\r\n                    onChange={handleChange_name}\r\n                />\r\n                <div className={classes.form}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Loại</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                            <FormControlLabel value=\"0\" control={<Radio />} label=\"Công khai\" />\r\n                            <FormControlLabel value=\"1\" control={<Radio />} label=\"Mật khẩu\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n                <div className={classes.form}>\r\n                    {form_pass}\r\n                </div>\r\n                <div className={classes.form}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <FormLabel component=\"legend\">Thời gian một lượt đánh</FormLabel>\r\n                        <Select\r\n                            labelId=\"demo-controlled-open-select-label\"\r\n                            id=\"demo-controlled-open-select\"\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onOpen={handleOpen}\r\n                            value={time}\r\n                            onChange={handleChange_time}\r\n                        >\r\n\r\n                            <MenuItem value={5}>5 Giây</MenuItem>\r\n                            <MenuItem value={10}>10 Giây</MenuItem>\r\n                            <MenuItem value={15}>15 Giây</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className={classes.form}>\r\n                    <Button color=\"primary\" onClick={handleSubmit} disabled={disabled}>\r\n                       {createroom}\r\n                </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </center>\r\n    );\r\n}\r\n}\r\n\r\n\r\n\r\n// If first time enter, this make sure not call a loop request\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SettingRoom;\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Constant\\context.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\socket.io.js",["165"],"import io from 'socket.io-client';\r\n// import config from '../config';\r\n\r\nconst socket = io('https://apiuser-caro.herokuapp.com/');\r\nconst socket_1 = io('http://localhost:5000/');\r\nexport default socket;","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Game.js",["166","167","168","169","170","171","172","173","174"],"import React, { useState,useContext } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport '../../index.css';\r\nimport Board from './Board'\r\nimport checkWin from './services'\r\nimport Config from '../Constant/configs'\r\nimport socket from '../socket.io'\r\nimport {Button} from \"@material-ui/core\";\r\nimport { Context } from \"../Constant/context\";\r\nfunction Game(props) {\r\n\r\n    const [context, setContext] = useContext(Context);\r\n    const [history, setHistory] = useState([\r\n        {\r\n            squares: Array(Config.brdSize * Config.brdSize).fill(null)\r\n        }\r\n    ]);\r\n    const [winner, setWinner] = useState(null);\r\n    const [nextMove, setNextMove] = useState(true);\r\n    const [winCells, setWinCell] = useState(null);\r\n    const [stepNumber, setstepNumber] = useState(0);\r\n    const [accendingMode, setAccending] = useState(false);\r\n    // setupSocket();\r\n    socket.off('move');\r\n    socket.on('move', function (data) {\r\n        handleClick(data);\r\n    });\r\n\r\n    const handleClick = (i) => {\r\n        console.log(\"click 2\");\r\n        const history2 = history.slice(0, stepNumber + 1);\r\n\r\n        const current = history2[history2.length - 1];\r\n\r\n        const squares = current.squares.slice();\r\n\r\n        if (winCells === null && squares[i] === null) {\r\n            squares[i] = nextMove ? \"X\" : \"O\";\r\n\r\n\r\n            setHistory(history2.concat([\r\n                {\r\n                    squares: squares,\r\n                    latestMoveSquare: i\r\n                }\r\n            ]));\r\n            const _history = history2.concat([\r\n                {\r\n                    squares: squares,\r\n                    latestMoveSquare: i\r\n                }\r\n            ])\r\n            const XorO = nextMove ? \"X\" : \"O\";\r\n\r\n            const _winCells = checkWin(i, XorO, history2.length - 1, _history);\r\n            console.log(_winCells);\r\n            setstepNumber(history2.length);\r\n            setNextMove(!nextMove);\r\n            setWinCell(_winCells.winCells);\r\n            setWinner(_winCells.user);\r\n        }\r\n    }\r\n\r\n    const ourname = context.name;\r\n    const room = props.roomInfo.playerX;\r\n    var isPlayerX = ourname === room;\r\n\r\n    const nameO=context.name;\r\n    const roomO=props.roomInfo.playerO;\r\n   \r\n    var isPlayerO=nameO===roomO;\r\n    \r\n    function userClick(i) {\r\n        // Prevent user click if rival is disconnected\r\n        // if (needToDisable) {\r\n        //     return;\r\n        // }\r\n        // Prevent user click if not his turn\r\n        if ((isPlayerX && !nextMove) || (!isPlayerX && nextMove)) {\r\n            return;\r\n        }\r\n        if((isPlayerX && nextMove)||(isPlayerO && !nextMove)){\r\n            handleClick(i);\r\n            socket.emit('move', i);\r\n        }\r\n        // Send move to server if it is valid\r\n       \r\n\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        // setstepNumber(step);\r\n        // setxIsNext((step % 2) === 0);\r\n    }\r\n    const handleSortToggle = () => {\r\n        setAccending(!accendingMode);\r\n    }\r\n    const current = history[stepNumber];\r\n    // const {row,col}=convert(i);\r\n    // const winInfo = calculateWinner(current.squares);\r\n    // const winner = winInfo.winner;\r\n    const moves = history.map((step, move) => {\r\n        const latestMoveSquare = step.latestMoveSquare;\r\n        const col = 1 + latestMoveSquare % Config.brdSize;\r\n        const row = 1 + Math.floor(latestMoveSquare / Config.brdSize);\r\n        const desc = move ?\r\n            `Go to move #${move} (${col}, ${row})` :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                <button\r\n                    className={move === stepNumber ? 'move-list-item-selected' : ''}\r\n                    onClick={() => requestUndo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n    //an nut luu\r\n    const disable=(winner==null)? true: false;\r\n    if (!accendingMode) {\r\n        moves.reverse();\r\n    }\r\n\r\n    let status;\r\n    if (winner != null) {\r\n        status = \"Winner: \" + winner;\r\n    } else {\r\n\r\n        status = \"Next player: \"\r\n        // + (xIsNext ? \"X\" : \"O\");\r\n\r\n    }\r\n    return (\r\n        <div className=\"game\">\r\n            <Button onClick={(e) => handleSubmitHistory(e)} color=\"primary\" disabled={disable}>\r\n                Luu lai\r\n            </Button>\r\n            <div className=\"game-board\">\r\n                <Board\r\n\r\n                    squares={current.squares}\r\n                    onClick={i => userClick(i)}\r\n                    winLine={winCells}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n\r\n                <button onClick={() => handleSortToggle()}>\r\n                    {accendingMode ? 'descending' : 'ascending'}\r\n                </button>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n    function handleSubmitHistory(e){\r\n        console.log(winner);\r\n        const data={\r\n            roomInfo: props.roomInfo.id,\r\n            winner:winner\r\n        }\r\n        socket.emit(\"infoWinner\",data);\r\n    }\r\n\r\n    // function setupSocket() {\r\n    //     socket.off('move');\r\n    //     socket.on('move', function (data) {\r\n    //         handleClick(data);\r\n    //     });\r\n\r\n\r\n    // }\r\n    function requestUndo(stepNumber) {\r\n\r\n        // if (stepNumber === 0) {\r\n        //     doConfirm('Bạn muốn chơi lại ?', () => {\r\n        //         socket.emit('play-again-request', '');\r\n        //         actions.actionRequest(true, `..! Đang chờ đối thủ đồng ý !..`);\r\n        //     }, () => {});\r\n        //     return;\r\n        // }\r\n\r\n\r\n        // const target = history[stepNumber];\r\n        // var request = {\r\n        //     stepNumber,\r\n        //     latestMoveSquare: target.latestMoveSquare\r\n        // };\r\n\r\n\r\n\r\n        // doConfirm('Bạn muốn quay về lượt này ?', () => {\r\n        //     socket.emit('undo-request', request);\r\n        //     alert(\"... Đang chờ đối thủ trả lời ...\");\r\n        //     // actions.actionRequest(true, `... Đang chờ đối thủ trả lời ...`);\r\n        // }, () => {});\r\n    }\r\n}\r\nfunction convert(i) {\r\n    const col = 1 + i % Config.brdSize;\r\n    const row = 1 + Math.floor(i / Config.brdSize);\r\n    return { col, row }\r\n}\r\n// function checkWin(row, col, user, stepNumber,history) {\r\n\r\n//     if (stepNumber === 0) {\r\n//         return null;\r\n//     }\r\n\r\n\r\n//     const current = history[stepNumber];\r\n//     const squares = current.squares.slice();\r\n\r\n//     // Get coordinates\r\n//     let coorX = row;\r\n//     let coorY = col;\r\n\r\n//     let countCol = 1;\r\n//     let countRow = 1;\r\n//     let countMainDiagonal = 1;\r\n//     let countSkewDiagonal = 1;\r\n//     let isBlock;\r\n//     const rival = (user === Config.xPlayer) ? Config.oPlayer : Config.xPlayer;\r\n\r\n//     // Check col\r\n//     isBlock = true;\r\n//     let winCells = [];\r\n//     coorX -= 1;\r\n//     while(coorX >= 0 && squares[coorX][coorY] === user) {\r\n//         countCol += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//     }\r\n//     if (coorX >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     while(coorX <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countCol += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     if (isBlock === false && countCol >= 5) return winCells;\r\n\r\n//     // Check row\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorY -= 1;\r\n//     while(coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countRow += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorY += 1;\r\n//     while(coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countRow += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorY = col;\r\n//     if (isBlock === false && countRow >= 5) return winCells;\r\n\r\n//     // Check main diagonal\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorX -= 1;\r\n//     coorY -= 1;\r\n//     while(coorX >= 0 && coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countMainDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorX >= 0 && coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     coorY += 1;\r\n//     while(coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countMainDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     if (isBlock === false && countMainDiagonal >= 5) return winCells;\r\n\r\n//     // Check skew diagonal\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorX -= 1;\r\n//     coorY += 1;\r\n//     while(coorX >= 0 && coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countSkewDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorX >= 0 && coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     coorY -= 1;\r\n//     while(coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countSkewDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     if (isBlock === false && countSkewDiagonal >= 5) return winCells;\r\n\r\n//     return null;\r\n// }\r\n\r\n\r\nfunction doConfirm(message) {\r\n    // <Dialog\r\n    //     open={open}\r\n    //     onClose={handleClose}\r\n    //     aria-labelledby=\"alert-dialog-title\"\r\n    //     aria-describedby=\"alert-dialog-description\"\r\n    //   >\r\n    //     <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n    //     <DialogContent>\r\n    //       <DialogContentText id=\"alert-dialog-description\">\r\n    //        {message}\r\n    //       </DialogContentText>\r\n    //     </DialogContent>\r\n    //     <DialogActions>\r\n    //       <Button onClick={handleDisAgree} color=\"primary\">\r\n    //         Disagree\r\n    //       </Button>\r\n    //       <Button onClick={handleAgree} color=\"primary\" autoFocus>\r\n    //         Agree\r\n    //       </Button>\r\n    //     </DialogActions>\r\n    //   </Dialog>\r\n\r\n}\r\n\r\nexport default Game;\r\n","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Chat\\chat.js",["175","176","177","178","179","180","181"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport queryString from 'query-string';\r\nimport socket from \"../../socket.io\";\r\nimport { InfoBar } from '../InfoBar/infoBar';\r\nimport { Input } from '../Input/input';\r\nimport { Messages } from '../Messages/messages';\r\nimport { TextContainer } from '../TextContainer/TextContainer'\r\nimport { Context } from \"../../Constant/context\";\r\nimport './chat.css';\r\nimport { PinDropSharp } from \"@material-ui/icons\";\r\n\r\n// let socket;\r\n\r\nexport const Chat = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [context, setContext] = useContext(Context);\r\n\r\n  const ENDPOINT = 'http://localhost:5000/';\r\n  \r\n\r\n  useEffect(() => {\r\n    // const { name, room } = queryString.parse(location.search);\r\n\r\n    // socket = io(ENDPOINT);\r\n\r\n    setRoom(props.roomInfo.id);\r\n    setName(context.name)\r\n\r\n    socket.emit('join_chat', { name: context.name, room: props.roomInfo.id }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, []);\r\n  //   }, [ENDPOINT, location.search]);\r\n\r\n   socket.off('message');\r\n  socket.on('message', message => {\r\n    setMessages(msgs => [...msgs, message]);\r\n  });\r\n\r\n  socket.on(\"roomData\", ({ users }) => {\r\n    setUsers(users);\r\n  });\r\n\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ backgroundColor: \"black\" }}>\r\n\r\n      </div>\r\n      <div className=\"outerContainer\">\r\n        {/* <TextContainer users={users} /> */}\r\n        <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}","D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Board.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\services.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Constant\\configs.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\TextContainer\\TextContainer.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\InfoBar\\infoBar.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Input\\input.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\messages.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Game\\Square.js",[],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\Message\\message.js",[],["182","183"],"D:\\Web2\\DACK\\FinalWebAdvanced-User\\src\\component\\TableOnline\\TableOnline.js",["184","185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":48},{"ruleId":"192","severity":1,"message":"197","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"198","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"199","line":5,"column":16,"nodeType":"194","messageId":"195","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"200","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":17},{"ruleId":"192","severity":1,"message":"201","line":37,"column":9,"nodeType":"194","messageId":"195","endLine":37,"endColumn":16},{"ruleId":"192","severity":1,"message":"202","line":42,"column":10,"nodeType":"194","messageId":"195","endLine":42,"endColumn":17},{"ruleId":"192","severity":1,"message":"203","line":51,"column":9,"nodeType":"194","messageId":"195","endLine":51,"endColumn":12},{"ruleId":"204","severity":1,"message":"205","line":55,"column":31,"nodeType":"206","messageId":"207","endLine":55,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":70,"column":6,"nodeType":"210","endLine":70,"endColumn":8,"suggestions":"211"},{"ruleId":"192","severity":1,"message":"203","line":77,"column":11,"nodeType":"194","messageId":"195","endLine":77,"endColumn":14},{"ruleId":"192","severity":1,"message":"212","line":72,"column":10,"nodeType":"194","messageId":"195","endLine":72,"endColumn":17},{"ruleId":"192","severity":1,"message":"202","line":74,"column":10,"nodeType":"194","messageId":"195","endLine":74,"endColumn":17},{"ruleId":"192","severity":1,"message":"203","line":82,"column":9,"nodeType":"194","messageId":"195","endLine":82,"endColumn":12},{"ruleId":"192","severity":1,"message":"213","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"214","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":12},{"ruleId":"192","severity":1,"message":"215","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":16},{"ruleId":"192","severity":1,"message":"216","line":41,"column":10,"nodeType":"194","messageId":"195","endLine":41,"endColumn":18},{"ruleId":"192","severity":1,"message":"217","line":67,"column":11,"nodeType":"194","messageId":"195","endLine":67,"endColumn":26},{"ruleId":"192","severity":1,"message":"218","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":13},{"ruleId":"192","severity":1,"message":"219","line":28,"column":12,"nodeType":"194","messageId":"195","endLine":28,"endColumn":18},{"ruleId":"192","severity":1,"message":"220","line":28,"column":19,"nodeType":"194","messageId":"195","endLine":28,"endColumn":28},{"ruleId":"192","severity":1,"message":"221","line":33,"column":21,"nodeType":"194","messageId":"195","endLine":33,"endColumn":31},{"ruleId":"192","severity":1,"message":"222","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"223","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":18},{"ruleId":"192","severity":1,"message":"213","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"224","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":21},{"ruleId":"192","severity":1,"message":"225","line":10,"column":16,"nodeType":"194","messageId":"195","endLine":10,"endColumn":22},{"ruleId":"192","severity":1,"message":"226","line":10,"column":23,"nodeType":"194","messageId":"195","endLine":10,"endColumn":32},{"ruleId":"192","severity":1,"message":"227","line":35,"column":12,"nodeType":"194","messageId":"195","endLine":35,"endColumn":19},{"ruleId":"192","severity":1,"message":"228","line":35,"column":20,"nodeType":"194","messageId":"195","endLine":35,"endColumn":27},{"ruleId":"192","severity":1,"message":"229","line":36,"column":12,"nodeType":"194","messageId":"195","endLine":36,"endColumn":22},{"ruleId":"192","severity":1,"message":"230","line":36,"column":23,"nodeType":"194","messageId":"195","endLine":36,"endColumn":33},{"ruleId":"192","severity":1,"message":"231","line":37,"column":12,"nodeType":"194","messageId":"195","endLine":37,"endColumn":21},{"ruleId":"192","severity":1,"message":"232","line":37,"column":22,"nodeType":"194","messageId":"195","endLine":37,"endColumn":31},{"ruleId":"192","severity":1,"message":"233","line":38,"column":11,"nodeType":"194","messageId":"195","endLine":38,"endColumn":13},{"ruleId":"192","severity":1,"message":"234","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":18},{"ruleId":"192","severity":1,"message":"221","line":43,"column":21,"nodeType":"194","messageId":"195","endLine":43,"endColumn":31},{"ruleId":"192","severity":1,"message":"235","line":5,"column":7,"nodeType":"194","messageId":"195","endLine":5,"endColumn":15},{"ruleId":"192","severity":1,"message":"236","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"237","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"238","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":21},{"ruleId":"192","severity":1,"message":"239","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":25},{"ruleId":"192","severity":1,"message":"240","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":19},{"ruleId":"192","severity":1,"message":"221","line":16,"column":21,"nodeType":"194","messageId":"195","endLine":16,"endColumn":31},{"ruleId":"192","severity":1,"message":"241","line":95,"column":11,"nodeType":"194","messageId":"195","endLine":95,"endColumn":17},{"ruleId":"192","severity":1,"message":"242","line":202,"column":10,"nodeType":"194","messageId":"195","endLine":202,"endColumn":17},{"ruleId":"192","severity":1,"message":"243","line":346,"column":10,"nodeType":"194","messageId":"195","endLine":346,"endColumn":19},{"ruleId":"192","severity":1,"message":"244","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":19},{"ruleId":"192","severity":1,"message":"245","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":23},{"ruleId":"192","severity":1,"message":"246","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":22},{"ruleId":"192","severity":1,"message":"247","line":17,"column":10,"nodeType":"194","messageId":"195","endLine":17,"endColumn":15},{"ruleId":"192","severity":1,"message":"221","line":20,"column":19,"nodeType":"194","messageId":"195","endLine":20,"endColumn":29},{"ruleId":"192","severity":1,"message":"248","line":22,"column":9,"nodeType":"194","messageId":"195","endLine":22,"endColumn":17},{"ruleId":"208","severity":1,"message":"249","line":38,"column":6,"nodeType":"210","endLine":38,"endColumn":8,"suggestions":"250"},{"ruleId":"188","replacedBy":"251"},{"ruleId":"190","replacedBy":"252"},{"ruleId":"192","severity":1,"message":"213","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":15},{"ruleId":"192","severity":1,"message":"214","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":12},{"ruleId":"192","severity":1,"message":"215","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":16},{"ruleId":"192","severity":1,"message":"253","line":19,"column":10,"nodeType":"194","messageId":"195","endLine":19,"endColumn":19},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Homepage' is defined but never used.","'useState' is defined but never used.","'uuid' is defined but never used.","'PropTypes' is defined but never used.","'classes' is assigned a value but never used.","'success' is assigned a value but never used.","'res' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token', 'url', and 'user._id'. Either include them or remove the dependency array.","ArrayExpression",["256"],"'context' is assigned a value but never used.","'AddIcon' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'response' is assigned a value but never used.","'onlineUsersList' is assigned a value but never used.","'Chat' is defined but never used.","'friend' is assigned a value but never used.","'setFriend' is assigned a value but never used.","'setContext' is assigned a value but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Homepage_game' is defined but never used.","'colors' is defined but never used.","'TextField' is defined but never used.","'addwell' is assigned a value but never used.","'setWell' is assigned a value but never used.","'addimprove' is assigned a value but never used.","'setImprove' is assigned a value but never used.","'addaction' is assigned a value but never used.","'setAction' is assigned a value but never used.","'id' is assigned a value but never used.","'InputLabel' is defined but never used.","'socket_1' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'jumpTo' is assigned a value but never used.","'convert' is defined but never used.","'doConfirm' is defined but never used.","'queryString' is defined but never used.","'TextContainer' is defined but never used.","'PinDropSharp' is defined but never used.","'users' is assigned a value but never used.","'ENDPOINT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'context.name' and 'props.roomInfo.id'. Either include them or remove the dependency array. If 'setRoom' needs the current value of 'props.roomInfo.id', you can also switch to useReducer instead of useState and read 'props.roomInfo.id' in the reducer.",["257"],["254"],["255"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [token, url, user._id]",{"range":"262","text":"263"},"Update the dependencies array to be: [context.name, props.roomInfo.id]",{"range":"264","text":"265"},[1713,1715],"[token, url, user._id]",[1198,1200],"[context.name, props.roomInfo.id]"]