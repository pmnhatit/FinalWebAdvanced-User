[{"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\index.js":"1","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\reportWebVitals.js":"2","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Main\\main.js":"3","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\onlineUser.js":"4","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\App.js":"5","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Signup\\signup.js":"6","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Bar\\bar.js":"7","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Signin\\signin.js":"8","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage.js":"9","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\MatchHistory\\matchHistory.js":"10","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\socket.io.js":"11","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\ScreenGame\\screengame.js":"12","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Chat\\chat.js":"13","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Game.js":"14","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\InfoBar\\infoBar.js":"15","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\messages.js":"16","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Input\\input.js":"17","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\TextContainer\\TextContainer.js":"18","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Board.js":"19","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\services.js":"20","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Constant\\configs.js":"21","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\Message\\message.js":"22","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Square.js":"23"},{"size":537,"mtime":1608127618937,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1608127618937,"results":"26","hashOfConfig":"25"},{"size":1124,"mtime":1608384734433,"results":"27","hashOfConfig":"25"},{"size":1037,"mtime":1608127618935,"results":"28","hashOfConfig":"25"},{"size":553,"mtime":1608127618918,"results":"29","hashOfConfig":"25"},{"size":5714,"mtime":1608127618935,"results":"30","hashOfConfig":"25"},{"size":3332,"mtime":1608127618920,"results":"31","hashOfConfig":"25"},{"size":6323,"mtime":1608127618934,"results":"32","hashOfConfig":"25"},{"size":2578,"mtime":1608127618930,"results":"33","hashOfConfig":"25"},{"size":4060,"mtime":1608127618932,"results":"34","hashOfConfig":"25"},{"size":204,"mtime":1608384712239,"results":"35","hashOfConfig":"25"},{"size":282,"mtime":1608127618933,"results":"36","hashOfConfig":"25"},{"size":2024,"mtime":1608127618921,"results":"37","hashOfConfig":"25"},{"size":11431,"mtime":1608127618928,"results":"38","hashOfConfig":"25"},{"size":509,"mtime":1608127618923,"results":"39","hashOfConfig":"25"},{"size":379,"mtime":1608127618926,"results":"40","hashOfConfig":"25"},{"size":580,"mtime":1608127618924,"results":"41","hashOfConfig":"25"},{"size":912,"mtime":1608127618927,"results":"42","hashOfConfig":"25"},{"size":869,"mtime":1608127618928,"results":"43","hashOfConfig":"25"},{"size":5520,"mtime":1608127618930,"results":"44","hashOfConfig":"25"},{"size":354,"mtime":1608127618928,"results":"45","hashOfConfig":"25"},{"size":1111,"mtime":1608384034334,"results":"46","hashOfConfig":"25"},{"size":316,"mtime":1608127618929,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1n8snef",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\index.js",[],["104","105"],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\reportWebVitals.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Main\\main.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\onlineUser.js",["106"],"import React, { useState, useEffect } from 'react';\r\nimport socket from './socket.io';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [response, setResponse] = useState('');\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // const socket = socketIOClient(ENDPOINT);\r\n    socket.on('FromAPI', (data) => {\r\n      setResponse(data);\r\n    });\r\n    socket.on('onlineUserServer', (arrayNameOnline) => {\r\n        console.log(\"online \", arrayNameOnline);\r\n     let temp=[];\r\n      arrayNameOnline.forEach(element => {\r\n\r\n        temp.push(element.name);\r\n        \r\n      });\r\n     \r\n      setOnlineUsers(temp);\r\n     \r\n      // const users = JSON.parse(message);\r\n      // setOnlineUsers(users);\r\n      // console.log(onlineUsers);\r\n    });\r\n    return () => socket.disconnect();\r\n  }, []);\r\n  const onlineUsersList = onlineUsers.map((onlineUser) => (\r\n    <li>{onlineUser}</li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      Danh sách người online\r\n      <ul>{onlineUsersList}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\App.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Signup\\signup.js",["107"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const url= localStorage.getItem('backend');\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  \r\n\r\n  const addUser = async () => {\r\n    console.log(\"add\");\r\n    sendaddUser();\r\n    history.push(\"/\");\r\n  };\r\n  const sendaddUser = async () => {\r\n    const body = {\r\n      username: userName,\r\n      password: password,\r\n      name: name,\r\n      phone:phone,\r\n      email:email\r\n    };\r\n    console.log(body);\r\n    console.log(1);\r\n    const res = await fetch(url + `users/signup`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"userName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                label=\"UserName\"\r\n                autoFocus\r\n                onChange={(e)=>setUserName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                name=\"Name\"\r\n                autoComplete=\"name\"\r\n                onChange={(e)=>setName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Phone\"\r\n                label=\"Phone\"\r\n                name=\"Phone\"\r\n                autoComplete=\"Phone\"\r\n                onChange={(e)=>setPhone(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n           \r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={addUser}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Bar\\bar.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Signin\\signin.js",["108","109"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport socket from '../socket.io'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst saveLocalStorage = (result) => {\r\n  \r\n  localStorage.setItem(\"token\", JSON.stringify(result.token));\r\n  localStorage.setItem(\"id\", JSON.stringify(result.user._id));\r\n  localStorage.setItem(\"username\", JSON.stringify(result.user.username));\r\n  localStorage.setItem(\"name\", JSON.stringify(result.user.name));\r\n  localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n  // console.log(JSON.parse(localStorage.getItem('user')));\r\n};\r\n\r\n\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const url = localStorage.getItem(\"backend\");\r\n  const [success, setSuccess] = useState(true);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const createFetch = async (linkUrl, body)=>\r\n{\r\n  const res = await fetch(linkUrl, {\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      //console.log(result);\r\n      saveLocalStorage(result);\r\n      console.log(result.user.name);\r\n      socket.emit(\"onlineUser\",result.user.name);\r\n      history.push('/homepage');\r\n    \r\n    })\r\n    .catch((err) => {\r\n      setSuccess(false);\r\n      console.log(\"error aa\");\r\n    });\r\n}\r\n\r\n  const handlerLogin = async (e) => {\r\n    console.log(\"handlerLogin\");\r\n    const body = {\r\n      username: userName,\r\n      password: password,\r\n    };\r\n    createFetch(url + \"users/signin\",body);\r\n  };\r\n\r\n  const responseGoogle = async(response) => {\r\n    //console.log(response.tokenId);\r\n    const body = {\r\n      token: response.tokenId\r\n    };\r\n    createFetch(url + \"users/signin/google\",body);\r\n  \r\n  };\r\n  const responseFacebook = (response) => {\r\n    console.log(response.accessToken);\r\n    const body = {\r\n      \r\n      accessToken:response.accessToken,\r\n      userID :response.userID\r\n    };\r\n    \r\n    createFetch(url + \"users/signin/facebook\",body);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"UserName\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handlerLogin}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <GoogleLogin\r\n          clientId=\"718820147204-d08vqnq79hnapbjv3099umi363a7bf5k.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n        />\r\n        <FacebookLogin\r\n          appId=\"1156392861430294\"\r\n          //autoLoad={true}\r\n          fields=\"name,email,picture\"\r\n          //onClick={componentClicked}\r\n          callback={responseFacebook} />,\r\n          {/* <FacebookLogin\r\n    appId=\"1156392861430294\"\r\n    autoLoad={true}\r\n    fields=\"name,email,picture\"\r\n    callback={responseFacebook}\r\n    cssClass=\"my-facebook-button-class\"\r\n    icon=\"fa-facebook\"\r\n  />, */}\r\n          \r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Homepage\\homepage.js",["110"],"import React, { useState } from 'react';\r\nimport {Button,TextField} from \"@material-ui/core\";\r\nimport ScreenGame from '../ScreenGame/screengame'\r\nimport {Chat} from '../Chatroom/Chat/chat'\r\nimport socket from '../socket.io'\r\n\r\nfunction Homepage() {\r\n    const [rival,setRival]=useState(\"tim doi thu\");\r\n    const [friend,setFriend]=useState(\"vao phong\");\r\n    const [roomInfo, setRoomInfo] = useState(null);\r\n    const [idRoom,setIDRoom]=useState(0);\r\n\r\n\r\n    socket.removeAllListeners();\r\n    socket.on('joinroom-success', function (roomInfo) {\r\n        socket.joinroom = true;\r\n        // console.log(roomInfo);\r\n        setRoomInfo(roomInfo);\r\n    });\r\n    // socket.on('joinroom-success-ai', function (roomInfo) {\r\n    //     socket.joinroom = true;\r\n    //     actions.actionJoinRoom(roomInfo);\r\n    //     actions.actionResetGame(Config.oPlayer);\r\n    // });\r\n\r\n    // If found a rival, start game\r\n    if (roomInfo) {\r\n         return <ScreenGame roomInfo={roomInfo} />\r\n        //  return <Chat  />\r\n       \r\n    }\r\n    // Choose to play with AI or other user\r\n    else {\r\n        return (\r\n            <center>\r\n               \r\n                <div >\r\n                    <Button variant=\"contained\" onClick={(e)=>findRival(e)}>{rival}</Button>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        onChange={handleChange} fullWidth\r\n\r\n                    />\r\n                     <Button onClick={(e)=>handleSubmit(e)} color=\"primary\">\r\n                        {friend}\r\n                    </Button>\r\n                   \r\n                </div>\r\n            </center>\r\n        );\r\n    }\r\n    function findRival(e) {\r\n        setRival(\".... Dang tim doi thu ....\")\r\n        e.target.disabled = true;\r\n        const data={\r\n            name:JSON.parse(localStorage.getItem('name')),\r\n            id: JSON.parse(localStorage.getItem('id'))\r\n        }\r\n        socket.emit('joinroom', data);\r\n    }\r\n    function handleChange(event) {\r\n        setIDRoom(event.target.value);\r\n    }\r\n    function handleSubmit(e){\r\n        setFriend(\".... Cho ban ....\");\r\n        e.target.disabled=true;\r\n        const data={\r\n            name:JSON.parse(localStorage.getItem('name')),\r\n            id :idRoom\r\n        }\r\n        socket.emit('joinroom_friend',data );\r\n    }\r\n}\r\n\r\n// If first time enter, this make sure not call a loop request\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Homepage;\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\MatchHistory\\matchHistory.js",["111","112","113","114","115","116","117"],"import React, { useState } from 'react';\r\nimport  { useEffect } from \"react\";\r\n// import clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\n\r\nexport default function MatchHistory() {\r\n  const classes = useStyles();\r\n  // const [orders] = useState(data);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token=JSON.parse(localStorage.getItem('token'));\r\n  const url = localStorage.getItem(\"backend\");\r\n  const [success, setSuccess] = useState(true);\r\n  const [data, setData]=useState([{_id: \"5fd98a90fea29a4868ed1953\", player_id: \"null\", enemy: \"a\", date: \"dd/mm/yyyy\", status: \"null\"}]);\r\n  \r\n//   console.log(user);\r\n//   console.log(token);\r\n\r\n  useEffect(() => {\r\n\r\n  \r\n  const res =  fetch(url+`profile/history/${user._id}`, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    headers: {\r\n       Authorization:'Bearer '+ `${token}`,\r\n       'Content-Type': 'application/json',\r\n  },\r\n    // body: JSON.stringify(body),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      console.log(result);\r\n      setData(result);\r\n      //console.log(data);\r\n    })\r\n    .catch((err) => {\r\n      setSuccess(false);\r\n      console.log(\"fail load history\");\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <Card\r\n      // className={clsx(classes.root, className)}\r\n      // {...rest}\r\n    >\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Số thứ tự\r\n                </TableCell>\r\n                <TableCell>\r\n                 Đối thủ\r\n                </TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Ngày\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                key={order._id}\r\n                >\r\n                  <TableCell>\r\n                    {order.order}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {order.enemy}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {moment(order.createdAt).format('DD/MM/YYYY')} */}\r\n                    {order.date}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color=\"primary\"\r\n                      label={order.status}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// LatestOrders.propTypes = {\r\n//   className: PropTypes.string\r\n// };\r\n\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\socket.io.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\ScreenGame\\screengame.js",["118"],"import React, { useState } from 'react';\r\nimport Game from '../Game/Game'\r\nimport {Chat} from '../Chatroom/Chat/chat'\r\nexport default function ScreenGame(props) {\r\n    return(<div>\r\n        <Game roomInfo={props.roomInfo}/>\r\n        <Chat roomInfo={props.roomInfo}/>\r\n    </div>)\r\n}","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Chat\\chat.js",["119","120","121","122","123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\nimport socket from '../../socket.io'\r\n\r\n\r\nimport {InfoBar} from '../InfoBar/infoBar';\r\nimport {Input} from '../Input/input';\r\nimport {Messages} from '../Messages/messages';\r\nimport {TextContainer} from '../TextContainer/TextContainer'\r\n\r\nimport './chat.css';\r\nimport { CodeSharp } from \"@material-ui/icons\";\r\n\r\n\r\n\r\nexport const Chat = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  // const ENDPOINT = 'http://localhost:3000/';\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    \r\n    setRoom(props.roomInfo.id);\r\n    setName(JSON.stringify(localStorage.getItem('name')));\r\n   console.log(\"room\" ,props.roomInfo.id);\r\n   console.log(\"name\", localStorage.getItem('name'));\r\n    socket.emit('join_chat', { name:localStorage.getItem('name'), room:props.roomInfo.id }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n}, []);\r\n \r\n  \r\n  useEffect(() => {\r\n   \r\n    socket.on('message', message => {\r\n      console.log(\"message \",message)\r\n      setMessages(msgs => [ ...msgs, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n \r\n\r\n  return (\r\n    <div>\r\n      <div style={{backgroundColor: \"black\"}}>\r\n\r\n      </div>\r\n      <div className=\"outerContainer\">\r\n    {/* <TextContainer users={users} /> */}\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n  );\r\n}","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Game.js",["125","126","127","128","129","130","131","132"],"import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport '../../index.css';\r\nimport Board from './Board'\r\nimport checkWin from './services'\r\nimport Config from '../Constant/configs'\r\nimport socket from '../socket.io'\r\nimport {Button} from \"@material-ui/core\";\r\nfunction Game(props) {\r\n\r\n    const [history, setHistory] = useState([\r\n        {\r\n            squares: Array(Config.brdSize * Config.brdSize).fill(null)\r\n        }\r\n    ]);\r\n    const [winner, setWinner] = useState(null);\r\n    const [nextMove, setNextMove] = useState(true);\r\n    const [winCells, setWinCell] = useState(null);\r\n    const [stepNumber, setstepNumber] = useState(0);\r\n    const [accendingMode, setAccending] = useState(false);\r\n    setupSocket();\r\n    socket.off('move');\r\n    socket.on('move', function (data) {\r\n        handleClick(data);\r\n    });\r\n\r\n    const handleClick = (i) => {\r\n        const history2 = history.slice(0, stepNumber + 1);\r\n\r\n        const current = history2[history2.length - 1];\r\n\r\n        const squares = current.squares.slice();\r\n\r\n        if (winCells === null && squares[i] === null) {\r\n            squares[i] = nextMove ? \"X\" : \"O\";\r\n\r\n\r\n            setHistory(history2.concat([\r\n                {\r\n                    squares: squares,\r\n                    latestMoveSquare: i\r\n                }\r\n            ]));\r\n            const _history = history2.concat([\r\n                {\r\n                    squares: squares,\r\n                    latestMoveSquare: i\r\n                }\r\n            ])\r\n            const XorO = nextMove ? \"X\" : \"O\";\r\n\r\n            const _winCells = checkWin(i, XorO, history2.length - 1, _history);\r\n            console.log(_winCells);\r\n            setstepNumber(history2.length);\r\n            setNextMove(!nextMove);\r\n            setWinCell(_winCells.winCells);\r\n            setWinner(_winCells.user);\r\n        }\r\n    }\r\n\r\n    const ourname = localStorage.getItem('name');\r\n    let name = ourname.slice(1, ourname.length - 1);\r\n    name = JSON.stringify(name);\r\n    const room = JSON.stringify(props.roomInfo.playerX);\r\n    var isPlayerX = name === room;\r\n    function userClick(i) {\r\n        // Prevent user click if rival is disconnected\r\n        // if (needToDisable) {\r\n        //     return;\r\n        // }\r\n\r\n        // Prevent user click if not his turn\r\n        if ((isPlayerX && !nextMove) || (!isPlayerX && nextMove)) {\r\n            return;\r\n        }\r\n\r\n        // Send move to server if it is valid\r\n        handleClick(i);\r\n        socket.emit('move', i);\r\n\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        // setstepNumber(step);\r\n        // setxIsNext((step % 2) === 0);\r\n    }\r\n    const handleSortToggle = () => {\r\n        setAccending(!accendingMode);\r\n    }\r\n    const current = history[stepNumber];\r\n    // const {row,col}=convert(i);\r\n    // const winInfo = calculateWinner(current.squares);\r\n    // const winner = winInfo.winner;\r\n    const moves = history.map((step, move) => {\r\n        const latestMoveSquare = step.latestMoveSquare;\r\n        const col = 1 + latestMoveSquare % Config.brdSize;\r\n        const row = 1 + Math.floor(latestMoveSquare / Config.brdSize);\r\n        const desc = move ?\r\n            `Go to move #${move} (${col}, ${row})` :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                <button\r\n                    className={move === stepNumber ? 'move-list-item-selected' : ''}\r\n                    onClick={() => requestUndo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n    //an nut luu\r\n    const disable=(winner==null)? true: false;\r\n    if (!accendingMode) {\r\n        moves.reverse();\r\n    }\r\n\r\n    let status;\r\n    if (winner != null) {\r\n        status = \"Winner: \" + winner;\r\n    } else {\r\n\r\n        status = \"Next player: \"\r\n        // + (xIsNext ? \"X\" : \"O\");\r\n\r\n    }\r\n    return (\r\n        <div className=\"game\">\r\n            <Button onClick={(e) => handleSubmitHistory(e)} color=\"primary\" disabled={disable}>\r\n                Luu lai\r\n            </Button>\r\n            <div className=\"game-board\">\r\n                <Board\r\n\r\n                    squares={current.squares}\r\n                    onClick={i => userClick(i)}\r\n                    winLine={winCells}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n\r\n                <button onClick={() => handleSortToggle()}>\r\n                    {accendingMode ? 'descending' : 'ascending'}\r\n                </button>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n    function handleSubmitHistory(e){\r\n        console.log(winner);\r\n        const data={\r\n            roomInfo: props.roomInfo.id,\r\n            winner:winner\r\n        }\r\n        socket.emit(\"infoWinner\",data);\r\n    }\r\n\r\n    function setupSocket() {\r\n        socket.off('move');\r\n        socket.on('move', function (data) {\r\n            handleClick(data);\r\n        });\r\n\r\n\r\n    }\r\n    function requestUndo(stepNumber) {\r\n\r\n        // if (stepNumber === 0) {\r\n        //     doConfirm('Bạn muốn chơi lại ?', () => {\r\n        //         socket.emit('play-again-request', '');\r\n        //         actions.actionRequest(true, `..! Đang chờ đối thủ đồng ý !..`);\r\n        //     }, () => {});\r\n        //     return;\r\n        // }\r\n\r\n\r\n        // const target = history[stepNumber];\r\n        // var request = {\r\n        //     stepNumber,\r\n        //     latestMoveSquare: target.latestMoveSquare\r\n        // };\r\n\r\n\r\n\r\n        // doConfirm('Bạn muốn quay về lượt này ?', () => {\r\n        //     socket.emit('undo-request', request);\r\n        //     alert(\"... Đang chờ đối thủ trả lời ...\");\r\n        //     // actions.actionRequest(true, `... Đang chờ đối thủ trả lời ...`);\r\n        // }, () => {});\r\n    }\r\n}\r\nfunction convert(i) {\r\n    const col = 1 + i % Config.brdSize;\r\n    const row = 1 + Math.floor(i / Config.brdSize);\r\n    return { col, row }\r\n}\r\n// function checkWin(row, col, user, stepNumber,history) {\r\n\r\n//     if (stepNumber === 0) {\r\n//         return null;\r\n//     }\r\n\r\n\r\n//     const current = history[stepNumber];\r\n//     const squares = current.squares.slice();\r\n\r\n//     // Get coordinates\r\n//     let coorX = row;\r\n//     let coorY = col;\r\n\r\n//     let countCol = 1;\r\n//     let countRow = 1;\r\n//     let countMainDiagonal = 1;\r\n//     let countSkewDiagonal = 1;\r\n//     let isBlock;\r\n//     const rival = (user === Config.xPlayer) ? Config.oPlayer : Config.xPlayer;\r\n\r\n//     // Check col\r\n//     isBlock = true;\r\n//     let winCells = [];\r\n//     coorX -= 1;\r\n//     while(coorX >= 0 && squares[coorX][coorY] === user) {\r\n//         countCol += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//     }\r\n//     if (coorX >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     while(coorX <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countCol += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     if (isBlock === false && countCol >= 5) return winCells;\r\n\r\n//     // Check row\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorY -= 1;\r\n//     while(coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countRow += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorY += 1;\r\n//     while(coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countRow += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorY = col;\r\n//     if (isBlock === false && countRow >= 5) return winCells;\r\n\r\n//     // Check main diagonal\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorX -= 1;\r\n//     coorY -= 1;\r\n//     while(coorX >= 0 && coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countMainDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorX >= 0 && coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     coorY += 1;\r\n//     while(coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countMainDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     if (isBlock === false && countMainDiagonal >= 5) return winCells;\r\n\r\n//     // Check skew diagonal\r\n//     isBlock = true;\r\n//     winCells = [];\r\n//     coorX -= 1;\r\n//     coorY += 1;\r\n//     while(coorX >= 0 && coorY >= 0 && squares[coorX][coorY] === user) {\r\n//         countSkewDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX -= 1;\r\n//         coorY += 1;\r\n//     }\r\n//     if (coorX >= 0 && coorY >= 0 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     coorX = row;\r\n//     coorY = col;\r\n//     winCells.push([coorX, coorY]);\r\n//     coorX += 1;\r\n//     coorY -= 1;\r\n//     while(coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] === user) {\r\n//         countSkewDiagonal += 1;\r\n//         winCells.push([coorX, coorY]);\r\n//         coorX += 1;\r\n//         coorY -= 1;\r\n//     }\r\n//     if (coorX <= Config.brdSize - 1 && coorY <= Config.brdSize - 1 && squares[coorX][coorY] !== rival) {\r\n//         isBlock = false;\r\n//     }\r\n//     if (isBlock === false && countSkewDiagonal >= 5) return winCells;\r\n\r\n//     return null;\r\n// }\r\n\r\n\r\nfunction doConfirm(message) {\r\n    // <Dialog\r\n    //     open={open}\r\n    //     onClose={handleClose}\r\n    //     aria-labelledby=\"alert-dialog-title\"\r\n    //     aria-describedby=\"alert-dialog-description\"\r\n    //   >\r\n    //     <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n    //     <DialogContent>\r\n    //       <DialogContentText id=\"alert-dialog-description\">\r\n    //        {message}\r\n    //       </DialogContentText>\r\n    //     </DialogContent>\r\n    //     <DialogActions>\r\n    //       <Button onClick={handleDisAgree} color=\"primary\">\r\n    //         Disagree\r\n    //       </Button>\r\n    //       <Button onClick={handleAgree} color=\"primary\" autoFocus>\r\n    //         Agree\r\n    //       </Button>\r\n    //     </DialogActions>\r\n    //   </Dialog>\r\n\r\n}\r\n\r\nexport default Game;\r\n","D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\InfoBar\\infoBar.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\messages.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Input\\input.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\TextContainer\\TextContainer.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Board.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\services.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Constant\\configs.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Chatroom\\Messages\\Message\\message.js",[],"D:\\Năm_4\\PTUDWeb nâng cao\\FinalWebAdvanced-User\\src\\component\\Game\\Square.js",[],["133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"143","line":77,"column":11,"nodeType":"141","messageId":"142","endLine":77,"endColumn":14},{"ruleId":"139","severity":1,"message":"144","line":71,"column":10,"nodeType":"141","messageId":"142","endLine":71,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":78,"column":9,"nodeType":"141","messageId":"142","endLine":78,"endColumn":12},{"ruleId":"139","severity":1,"message":"145","line":4,"column":9,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"146","line":5,"column":16,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"147","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":17},{"ruleId":"139","severity":1,"message":"148","line":37,"column":9,"nodeType":"141","messageId":"142","endLine":37,"endColumn":16},{"ruleId":"139","severity":1,"message":"144","line":42,"column":10,"nodeType":"141","messageId":"142","endLine":42,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":51,"column":9,"nodeType":"141","messageId":"142","endLine":51,"endColumn":12},{"ruleId":"149","severity":1,"message":"150","line":55,"column":31,"nodeType":"151","messageId":"152","endLine":55,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":70,"column":6,"nodeType":"155","endLine":70,"endColumn":8,"suggestions":"156"},{"ruleId":"139","severity":1,"message":"157","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"158","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"159","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":10},{"ruleId":"139","severity":1,"message":"160","line":10,"column":9,"nodeType":"141","messageId":"142","endLine":10,"endColumn":22},{"ruleId":"139","severity":1,"message":"161","line":13,"column":10,"nodeType":"141","messageId":"142","endLine":13,"endColumn":19},{"ruleId":"139","severity":1,"message":"162","line":20,"column":10,"nodeType":"141","messageId":"142","endLine":20,"endColumn":15},{"ruleId":"153","severity":1,"message":"163","line":38,"column":4,"nodeType":"155","endLine":38,"endColumn":6,"suggestions":"164"},{"ruleId":"139","severity":1,"message":"165","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"166","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"167","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":21},{"ruleId":"139","severity":1,"message":"168","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":25},{"ruleId":"139","severity":1,"message":"169","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":19},{"ruleId":"139","severity":1,"message":"170","line":87,"column":11,"nodeType":"141","messageId":"142","endLine":87,"endColumn":17},{"ruleId":"139","severity":1,"message":"171","line":194,"column":10,"nodeType":"141","messageId":"142","endLine":194,"endColumn":17},{"ruleId":"139","severity":1,"message":"172","line":338,"column":10,"nodeType":"141","messageId":"142","endLine":338,"endColumn":19},{"ruleId":"135","replacedBy":"173"},{"ruleId":"137","replacedBy":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'success' is assigned a value but never used.","'Chat' is defined but never used.","'uuid' is defined but never used.","'PropTypes' is defined but never used.","'classes' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token', 'url', and 'user._id'. Either include them or remove the dependency array.","ArrayExpression",["177"],"'useState' is defined but never used.","'queryString' is defined but never used.","'io' is defined but never used.","'TextContainer' is defined but never used.","'CodeSharp' is defined but never used.","'users' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.roomInfo.id'. Either include it or remove the dependency array. If 'setRoom' needs the current value of 'props.roomInfo.id', you can also switch to useReducer instead of useState and read 'props.roomInfo.id' in the reducer.",["178"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'jumpTo' is assigned a value but never used.","'convert' is defined but never used.","'doConfirm' is defined but never used.",["175"],["176"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [token, url, user._id]",{"range":"183","text":"184"},"Update the dependencies array to be: [props.roomInfo.id]",{"range":"185","text":"186"},[1713,1715],"[token, url, user._id]",[1147,1149],"[props.roomInfo.id]"]